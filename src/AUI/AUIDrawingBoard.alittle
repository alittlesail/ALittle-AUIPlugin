
namespace AUIPlugin;

public class AUIDrawingBoard : ALittle.DisplayLayout
{
    private ALittle.DynamicImage _image;
    private int _pan_size = 5;
    private int _pan_color = 0;
    private int _draw_width = 0;
    private int _draw_height = 0;

    private fun TCtor()
    {
        this._image = new ALittle.DynamicImage(this._ctrl_sys);
        this._image.width_type = ALittle.UIEnumTypes.SIZE_MARGIN;
        this._image.height_type = ALittle.UIEnumTypes.SIZE_MARGIN;
        this._image.SetRenderMode(1);
        this.AddChild(this._image);
        this._image.AddEventListener(this, this.HandleDrag);
        this._image.AddEventListener(this, this.HandleDragEnd);
    }

    public fun SetPan(int size, int color)
    {
        this._pan_size = size;
        if (this._pan_size < 1) this._pan_size = 1;
        this._pan_color = color;
    }

    public fun SetDrawSize(int width, int height, int color)
    {
        this._draw_width = width;
        this._draw_height = height;
        if (this._draw_width < 0) this._draw_width = 0;
        if (this._draw_height < 0) this._draw_height = 0;

        this._image.SetSurfaceSize(this._draw_width, this._draw_height, color);
    }

    public fun ClearContent(int color)
    {
        this._image.SetSurfaceSize(this._draw_width, this._draw_height, color);
    }

    public get surface() : carp.CarpSurface { return this._image.GetSurface(false); }

    private fun HandleDrag(ALittle.UIButtonDragEvent event)
    {
        // 计算笔触的坐标
        var x_rate = event.rel_x / event.target.width;
        if (x_rate > 1) x_rate = 1;
        var y_rate = event.rel_y / event.target.height;
        if (y_rate > 1) y_rate = 1;

        var x = ALittle.Math_Floor(this._draw_width * x_rate);
        var y = ALittle.Math_Floor(this._draw_height * y_rate);

        var surface = this._image.GetSurface(true);

        var range = ALittle.Math_Floor((this._pan_size - 1) / 2);
        for (var col = x - range; col <= x + range; 1)
        {
            for (var row = y - range; row <= y + range; 1)
			{
                carp.SetCarpSurfacePixel(surface, col, row, this._pan_color);
            }
        }
    }

    private fun HandleDragEnd(ALittle.UIButtonDragEndEvent event)
    {
        this.DispatchEvent(new ALittle.UIChangedEvent());
    }
}
